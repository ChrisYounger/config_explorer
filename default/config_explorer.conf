# Don't change this file
[global]
write_access = false
run_commands = false
hide_settings = false
max_file_size = 10
cache_file_depth = 6
conf_validate_on_save = true
git_autocommit = false
git_autocommit_show_output = auto
git_autocommit_dir = 
git_autocommit_work_tree = 

[hook]
disabled = false
showWithSave = true 
order = 10
matchtype = file

[hook:btool]
# when editing .conf files in local or default, have an option to run btool
match = /(?:local|default)/[^\/]*\.conf$
showWithSave = false
label = Run btool on ${BASEFILE}
action = btool:${BASEFILE}

[hook:spec]
# when editing .conf files in local or default, have an option to show the spec files
showWithSave = false
match = /(?:local|default)/[^\/]*\.conf$
label = Open ${BASEFILE}.spec
action = spec:${BASEFILE}

[hook:python_run]
# when editing .py files in bin, have an option to run them as 'splunk cmd'
# This will only show if run_commands=true in the config file
match = .*/bin/.*\.py$
label = Run in Splunk env
action = run:splunk cmd python ${FILE}

[hook:viz_run_build]
# when editing vizulisations, have an option to build them as 'npm run build'
# This will only show if run_commands=true in the config file
match = \/appserver\/static\/visualizations\/
label = npm run build
action = run:cd ${DIRNAME} && npm run build

[hook:bump]
# when editing anything in the static folder, have an option to trigger a bump
# bumping isnt required if you setup your Splunk environment for development
match = /appserver/static/
label = Bump Splunk cache
action = bump

# below here are the debug/refresh which we only define for some specific files
[hook:nav]
# when editing .xml files in ui/nav, have an option to run debug refresh on nav endpoint
match = /ui/nav/.*\.xml$
label = Debug/refresh nav
action = refresh:data/ui/nav                  

[hook:html]
# when editing .html or xml files in ui/html, have an option to run debug refresh on views endpoint
match = /ui/html/.*\.(?:ht|x)ml$
label = Debug/refresh views
action = refresh:data/ui/views                

[hook:collections]
# when editing collections.conf files, have an option to run debug refresh on collections endpoint
match = /collections\.conf$
label = Debug/refresh collections-conf   
action = refresh:admin/collections-conf       

[hook:inputs]
# when editing inputs.conf files, have an option to run debug refresh on inputs endpoint
match = /inputs\.conf$
label = Debug/refresh conf-inputs
action = refresh:admin/conf-inputs            

[hook:indexes]
# when editing index.conf files, have an option to run debug refresh on indexes endpoint
match = /indexes\.conf$
label = Debug/refresh indexes
action = refresh:admin/indexes      
          
[hook:savedsearch]
# when editing savedsearches.conf files, have an option to run debug refresh on savedsearches endpoint
match = /savedsearches\.conf$
label = Debug/refresh savedsearch
action = refresh:admin/savedsearch            

[hook:serverclass]
# when editing serverclass.conf files, have an option to run debug refresh on serverclasses endpoint
# might need admin/deploymentserver
match = /serverclass\.conf$
label = Debug/refresh serverclasses
action = refresh:admin/serverclasses


# These next two hooks are special for for the "Settings" screen.
[hook:settings_spec]
showWithSave = false
match = ^$
label = Open documentation (.spec file)
action = spec:config_explorer.conf

[hook:settings_examples]
showWithSave = false
match = ^$
label = Show out-of-the-box hooks
action = read:./etc/apps/config_explorer/default/config_explorer.conf
